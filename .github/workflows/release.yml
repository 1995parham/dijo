name: release

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build:
    name: Build for ${{ matrix.os }} (${{ matrix.target }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            archive_ext: .tar.gz
            executable: dijo
          - os: macos-latest
            target: x86_64-apple-darwin
            archive_ext: .tar.gz
            executable: dijo
          - os: macos-latest
            target: aarch64-apple-darwin
            archive_ext: .tar.gz
            executable: dijo
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            archive_ext: .zip
            executable: dijo.exe

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          target: ${{ matrix.target }}

      - name: Build release binary
        run: cargo build --release --target ${{ matrix.target }}

      - name: Create package directory
        run: |
          mkdir package
          cp LICENSE package/
          cp README.md package/
          cp "dijo.1" package/

      - name: Package for Linux/macOS
        if: startsWith(matrix.os, 'ubuntu') || startsWith(matrix.os, 'macos')
        run: |
          cp target/${{ matrix.target }}/release/${{ matrix.executable }} package/
          tar -czvf dijo-${{ matrix.target }}${{ matrix.archive_ext }} package/

      - name: Package for Windows
        if: startsWith(matrix.os, 'windows')
        run: |
          cp target/${{ matrix.target }}/release/${{ matrix.executable }} package/
          Compress-Archive -Path package -DestinationPath dijo-${{ matrix.target }}${{ matrix.archive_ext }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: dijo-${{ matrix.target }}
          path: dijo-${{ matrix.target }}${{ matrix.archive_ext }}

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: release_files

      - name: Display downloaded files
        run: find release_files -type f

      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
          files: |
            release_files/**/*.tar.gz
            release_files/**/*.zip
